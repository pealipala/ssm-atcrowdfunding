<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pealipala.manager.dao.UserMapper">



	<resultMap id="BaseResultMap" type="com.pealipala.bean.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="loginacct" property="loginacct" jdbcType="VARCHAR" />
		<result column="userpswd" property="userpswd" jdbcType="CHAR" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="createtime" property="createtime" jdbcType="CHAR" />
	</resultMap>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.pealipala.bean.User" keyProperty="id" useGeneratedKeys="true">
		insert into t_user (id,
		loginacct, userpswd,
		username, email, createtime
		)
		values
		(#{id,jdbcType=INTEGER}, #{loginacct,jdbcType=VARCHAR},
		#{userpswd,jdbcType=CHAR},
		#{username,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{createtime,jdbcType=CHAR}
		)
	</insert>
	<update id="updateByPrimaryKey" parameterType="com.pealipala.bean.User">
		update t_user
		set
		loginacct = #{loginacct,jdbcType=VARCHAR},
		userpswd =
		#{userpswd,jdbcType=CHAR},
		username = #{username,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		createtime =
		#{createtime,jdbcType=CHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select id, loginacct, userpswd, username, email,
		createtime
		from t_user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select id, loginacct, userpswd,
		username, email, createtime
		from t_user
	</select>

	<select id="queryUserLogin" parameterType="map" resultMap="BaseResultMap">
		select id, loginacct, userpswd,
		username, email, createtime
		from t_user where loginacct=#{loginacct} and userpswd=#{userpswd}
	</select>

	<!--<select id="queryUserPage"  resultMap="BaseResultMap">-->
		<!--select id, loginacct, userpswd,-->
		<!--username, email, createtime-->
		<!--from t_user limit #{startIndex},#{pagesize}-->
	<!--</select>-->

	<!--<select id="queryUserCount"  resultType="Integer">-->
		<!--select count(*)-->
		<!--from t_user-->
	<!--</select>-->

	<select id="queryUserPage"  resultMap="BaseResultMap">
		select id, loginacct, userpswd,
		username, email, createtime
		from t_user
		<where>
			<if test="queryText!=null">
				loginacct LIKE concat("%",#{queryText},"%")
			</if>
		</where>
		order by createtime desc
		limit #{startIndex},#{pagesize}
	</select>

	<select id="queryUserCount"  resultType="Integer">
		select count(*)
		from t_user
		<where>
			<if test="queryText!=null">
				loginacct LIKE concat("%",#{queryText},"%")
			</if>
		</where>
	</select>

	<delete id="deleteUserBatchByVO">
		delete from t_user
		where id  in
		<foreach collection="datas" open="(" close=")" separator="," item="user">
			#{user.id}
		</foreach>
	</delete>


</mapper>